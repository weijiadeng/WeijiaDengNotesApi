{"version":3,"sources":["containers/NotFound.js","components/LoaderButton.js","libs/contextLib.js","libs/hooksLib.js","libs/errorLib.js","containers/Login.js","containers/Home.js","containers/Signup.js","libs/awsLib.js","config.js","containers/NewNote.js","containers/Notes.js","components/BillingForm.js","containers/Settings.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["NotFound","className","LoaderButton","isLoading","disabled","props","Button","children","AppContext","createContext","useAppContext","useContext","useFormFields","initialState","useState","fields","setValues","event","target","id","value","onError","error","message","toString","Error","alert","Login","userHasAuthenticated","setIsLoading","email","password","handleFieldChange","a","preventDefault","Auth","signIn","Form","onSubmit","Group","size","controlId","Label","Control","autoFocus","type","onChange","block","length","Home","notes","setNotes","isAuthenticated","loadNotes","API","get","renderNotesList","to","ListGroup","Item","action","map","noteId","content","createdAt","trim","split","Date","toLocaleString","useEffect","onLoad","Signup","confirmPassword","confirmationCode","history","useHistory","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","push","variant","Text","muted","s3Upload","file","filename","now","name","Storage","vault","put","contentType","stored","key","config","STRIPE_KEY","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","NewNote","useRef","setContent","current","MAX_ATTACHMENT_SIZE","attachment","createNote","note","post","body","as","e","files","Notes","str","useParams","setNote","isDeleting","setIsDeleting","saveNote","deleteNote","del","window","confirm","loadNote","attachmentURL","rel","href","replace","onClick","injectStripe","storage","isProcessing","setIsProcessing","isCardComplete","setIsCardComplete","stripe","createToken","token","min","placeholder","complete","style","base","fontSize","color","fontFamily","Settings","setStripe","billUser","details","source","Stripe","fonts","cssSrc","AuthenticatedRoute","rest","useLocation","pathname","search","UnauthenticatedRoute","redirect","url","location","results","RegExp","exec","decodeURIComponent","querystring","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","currentSession","signOut","Navbar","collapseOnSelect","bg","expand","Brand","Toggle","Collapse","Nav","activeKey","Link","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00d088f9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound text-center\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\nimport \"./LoaderButton.css\";\n\nexport default function LoaderButton({\n    isLoading,\n    className = \"\",\n    disabled = false,\n    ...props\n}) {\n    return (\n        <Button\n            disabled={disabled || isLoading}\n            className={`LoaderButton ${className}`}\n            {...props}\n        >\n            {isLoading && <BsArrowRepeat className=\"spinning\" />}\n            {props.children}\n        </Button>\n    );\n}\n","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n    const [fields, setValues] = useState(initialState);\n\n    return [\n        fields,\n        function (event) {\n            setValues({\n                ...fields,\n                [event.target.id]: event.target.value\n            });\n        }\n    ];\n}\n","export function onError(error) {\n    let message = error.toString();\n\n    // Auth errors\n    if (!(error instanceof Error) && error.message) {\n        message = error.message;\n    }\n\n    alert(message);\n}\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport Form from \"react-bootstrap/Form\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Login.css\";\n\nexport default function Login() {\n    const { userHasAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(false);\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\"\n    });\n\n    function validateForm() {\n        return fields.email.length > 0 && fields.password.length > 0;\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n\n        try {\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"Login\">\n            <Form onSubmit={handleSubmit}>\n                <Form.Group size=\"lg\" controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        value={fields.email}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={fields.password}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <LoaderButton\n                    block\n                    size=\"lg\"\n                    type=\"submit\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                >\n                    Login\n        </LoaderButton>\n            </Form>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { BsPencilSquare } from \"react-icons/bs\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { API } from \"aws-amplify\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  const [notes, setNotes] = useState([]);\n  const { isAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function onLoad() {\n      if (!isAuthenticated) {\n        return;\n      }\n\n      try {\n        const notes = await loadNotes();\n        setNotes(notes);\n      } catch (e) {\n        onError(e);\n      }\n\n      setIsLoading(false);\n    }\n\n    onLoad();\n  }, [isAuthenticated]);\n\n  function loadNotes() {\n    return API.get(\"notes\", \"/notes\");\n  }\n  function renderNotesList(notes) {\n    return (\n      <>\n        <LinkContainer to=\"/notes/new\">\n          <ListGroup.Item action className=\"py-3 text-nowrap text-truncate\">\n            <BsPencilSquare size={17} />\n            <span className=\"ml-2 font-weight-bold\">Create a new note</span>\n          </ListGroup.Item>\n        </LinkContainer>\n        {notes.map(({ noteId, content, createdAt }) => (\n          <LinkContainer key={noteId} to={`/notes/${noteId}`}>\n            <ListGroup.Item action>\n              <span className=\"font-weight-bold\">\n                {content.trim().split(\"\\n\")[0]}\n              </span>\n              <br />\n              <span className=\"text-muted\">\n                Created: {new Date(createdAt).toLocaleString()}\n              </span>\n            </ListGroup.Item>\n          </LinkContainer>\n        ))}\n      </>\n    );\n  }\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>Scratch</h1>\n        <p className=\"text-muted\">A simple note taking app</p>\n      </div>\n    );\n  }\n\n  function renderNotes() {\n    return (\n      <div className=\"notes\">\n        <h2 className=\"pb-3 mt-4 mb-3 border-bottom\">Your Notes</h2>\n        <ListGroup>{!isLoading && renderNotesList(notes)}</ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {isAuthenticated ? renderNotes() : renderLander()}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Signup.css\";\n\nexport default function Signup() {\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        confirmationCode: \"\",\n    });\n    const history = useHistory();\n    const [newUser, setNewUser] = useState(null);\n    const { userHasAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(false);\n\n    function validateForm() {\n        return (\n            fields.email.length > 0 &&\n            fields.password.length > 0 &&\n            fields.password === fields.confirmPassword\n        );\n    }\n\n    function validateConfirmationForm() {\n        return fields.confirmationCode.length > 0;\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n\n        try {\n            const newUser = await Auth.signUp({\n                username: fields.email,\n                password: fields.password,\n            });\n            setIsLoading(false);\n            setNewUser(newUser);\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    async function handleConfirmationSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n\n        try {\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n            await Auth.signIn(fields.email, fields.password);\n\n            userHasAuthenticated(true);\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function renderConfirmationForm() {\n        return (\n            <Form onSubmit={handleConfirmationSubmit}>\n                <Form.Group controlId=\"confirmationCode\" size=\"lg\">\n                    <Form.Label>Confirmation Code</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"tel\"\n                        onChange={handleFieldChange}\n                        value={fields.confirmationCode}\n                    />\n                    <Form.Text muted>Please check your email for the code.</Form.Text>\n                </Form.Group>\n                <LoaderButton\n                    block\n                    size=\"lg\"\n                    type=\"submit\"\n                    variant=\"success\"\n                    isLoading={isLoading}\n                    disabled={!validateConfirmationForm()}\n                >\n                    Verify\n        </LoaderButton>\n            </Form>\n        );\n    }\n\n    function renderForm() {\n        return (\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" size=\"lg\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        value={fields.email}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\" size=\"lg\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={fields.password}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        onChange={handleFieldChange}\n                        value={fields.confirmPassword}\n                    />\n                </Form.Group>\n                <LoaderButton\n                    block\n                    size=\"lg\"\n                    type=\"submit\"\n                    variant=\"success\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                >\n                    Signup\n        </LoaderButton>\n            </Form>\n        );\n    }\n\n    return (\n        <div className=\"Signup\">\n            {newUser === null ? renderForm() : renderConfirmationForm()}\n        </div>\n    );\n}\n","import { Storage } from \"aws-amplify\";\n\nexport async function s3Upload(file) {\n  const filename = `${Date.now()}-${file.name}`;\n\n  const stored = await Storage.vault.put(filename, file, {\n    contentType: file.type,\n  });\n\n  return stored.key;\n}\n","const config = {\n\n  STRIPE_KEY: \"pk_test_51IUoVZHUkyjAXMtWDH20EiKKGNKusb7Jec0fIZQ0fyO8AbjwWxAsGK4SJRm7gGnKswYwasapUt3cmoXZNSJJwHf700zqqYVqTJ\",\n  s3: {\n    REGION: \"us-west-2\",\n    BUCKET: \"notes-app-upload-weijia\",\n  },\n\n  apiGateway: {\n    REGION: \"us-west-2\",\n    URL: \"https://y4m5xqlvsc.execute-api.us-west-2.amazonaws.com/prod\",\n  },\n\n\n  cognito: {\n    REGION: \"us-west-2\",\n    USER_POOL_ID: \"us-west-2_5q6lPCf2F\",\n    APP_CLIENT_ID: \"1j5vc27s2rgejms8n5hji78r1m\",\n    IDENTITY_POOL_ID: \"us-west-2:fd4cb159-a523-40e9-9528-9f6aa4b05498\",\n  },\n};\n\nexport default config;\n","import React, { useRef, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"aws-amplify\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { onError } from \"../libs/errorLib\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\n\nexport default function NewNote() {\n    const file = useRef(null);\n    const history = useHistory();\n    const [content, setContent] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    function validateForm() {\n        return content.length > 0;\n    }\n\n    function handleFileChange(event) {\n        file.current = event.target.files[0];\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n            alert(\n                `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000\n                } MB.`\n            );\n            return;\n        }\n\n        setIsLoading(true);\n\n        try {\n            const attachment = file.current ? await s3Upload(file.current) : null;\n\n            await createNote({ content, attachment });\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function createNote(note) {\n        return API.post(\"notes\", \"/notes\", {\n            body: note\n        });\n    }\n\n    return (\n        <div className=\"NewNote\">\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"content\">\n                    <Form.Control\n                        value={content}\n                        as=\"textarea\"\n                        onChange={(e) => setContent(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"file\">\n                    <Form.Label>Attachment</Form.Label>\n                    <Form.Control onChange={handleFileChange} type=\"file\" />\n                </Form.Group>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    size=\"lg\"\n                    variant=\"primary\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                >\n                    Create\n        </LoaderButton>\n            </Form>\n        </div>\n    );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport Form from \"react-bootstrap/Form\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Notes.css\";\n\nexport default function Notes() {\n    const file = useRef(null);\n    const { id } = useParams();\n    const history = useHistory();\n    const [note, setNote] = useState(null);\n    const [content, setContent] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n\n\n    useEffect(() => {\n        function loadNote() {\n            return API.get(\"notes\", `/notes/${id}`);\n        }\n\n        async function onLoad() {\n            try {\n                const note = await loadNote();\n                const { content, attachment } = note;\n\n                if (attachment) {\n                    note.attachmentURL = await Storage.vault.get(attachment);\n                }\n\n                setContent(content);\n                setNote(note);\n            } catch (e) {\n                onError(e);\n            }\n        }\n\n        onLoad();\n    }, [id]);\n\n    function validateForm() {\n        return content.length > 0;\n    }\n\n    function formatFilename(str) {\n        return str.replace(/^\\w+-/, \"\");\n    }\n\n    function handleFileChange(event) {\n        file.current = event.target.files[0];\n    }\n\n    function saveNote(note) {\n        return API.put(\"notes\", `/notes/${id}`, {\n            body: note\n        });\n    }\n\n    async function handleSubmit(event) {\n        let attachment;\n\n        event.preventDefault();\n\n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n            alert(\n                `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000\n                } MB.`\n            );\n            return;\n        }\n\n        setIsLoading(true);\n\n        try {\n            if (file.current) {\n                attachment = await s3Upload(file.current);\n            }\n\n            await saveNote({\n                content,\n                attachment: attachment || note.attachment\n            });\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function deleteNote() {\n        return API.del(\"notes\", `/notes/${id}`);\n    }\n\n    async function handleDelete(event) {\n        event.preventDefault();\n\n        const confirmed = window.confirm(\n            \"Are you sure you want to delete this note?\"\n        );\n\n        if (!confirmed) {\n            return;\n        }\n\n        setIsDeleting(true);\n\n        try {\n            await deleteNote();\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsDeleting(false);\n        }\n    }\n\n    return (\n        <div className=\"Notes\">\n            {note && (\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"content\">\n                        <Form.Control\n                            as=\"textarea\"\n                            value={content}\n                            onChange={(e) => setContent(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"file\">\n                        <Form.Label>Attachment</Form.Label>\n                        {note.attachment && (\n                            <p>\n                                <a\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    href={note.attachmentURL}\n                                >\n                                    {formatFilename(note.attachment)}\n                                </a>\n                            </p>\n                        )}\n                        <Form.Control onChange={handleFileChange} type=\"file\" />\n                    </Form.Group>\n                    <LoaderButton\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        isLoading={isLoading}\n                        disabled={!validateForm()}\n                    >\n                        Save\n          </LoaderButton>\n                    <LoaderButton\n                        block\n                        size=\"lg\"\n                        variant=\"danger\"\n                        onClick={handleDelete}\n                        isLoading={isDeleting}\n                    >\n                        Delete\n          </LoaderButton>\n                </Form>\n            )}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport LoaderButton from \"./LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./BillingForm.css\";\n\nfunction BillingForm({ isLoading, onSubmit, ...props }) {\n  const [fields, handleFieldChange] = useFormFields({\n    name: \"\",\n    storage: \"\",\n  });\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isCardComplete, setIsCardComplete] = useState(false);\n\n  isLoading = isProcessing || isLoading;\n\n  function validateForm() {\n    return fields.name !== \"\" && fields.storage !== \"\" && isCardComplete;\n  }\n\n  async function handleSubmitClick(event) {\n    event.preventDefault();\n\n    setIsProcessing(true);\n\n    const { token, error } = await props.stripe.createToken({\n      name: fields.name,\n    });\n\n    setIsProcessing(false);\n\n    onSubmit(fields.storage, { token, error });\n  }\n\n  return (\n    <Form className=\"BillingForm\" onSubmit={handleSubmitClick}>\n      <Form.Group size=\"lg\" controlId=\"storage\">\n        <Form.Label>Storage</Form.Label>\n        <Form.Control\n          min=\"0\"\n          type=\"number\"\n          value={fields.storage}\n          onChange={handleFieldChange}\n          placeholder=\"Number of notes to store\"\n        />\n      </Form.Group>\n      <hr />\n      <Form.Group size=\"lg\" controlId=\"name\">\n        <Form.Label>Cardholder&apos;s name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={fields.name}\n          onChange={handleFieldChange}\n          placeholder=\"Name on the card\"\n        />\n      </Form.Group>\n      <Form.Label>Credit Card Info</Form.Label>\n      <CardElement\n        className=\"card-field\"\n        onChange={(e) => setIsCardComplete(e.complete)}\n        style={{\n          base: {\n            fontSize: \"16px\",\n            color: \"#495057\",\n            fontFamily: \"'Open Sans', sans-serif\",\n          },\n        }}\n      />\n      <LoaderButton\n        block\n        size=\"lg\"\n        type=\"submit\"\n        isLoading={isLoading}\n        disabled={!validateForm()}\n      >\n        Purchase\n      </LoaderButton>\n    </Form>\n  );\n}\n\nexport default injectStripe(BillingForm);\n","import React, { useState, useEffect } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../components/BillingForm\";\nimport \"./Settings.css\";\n\nexport default function Settings() {\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [stripe, setStripe] = useState(null);\n\n    useEffect(() => {\n        setStripe(window.Stripe(config.STRIPE_KEY));\n    }, []);\n    function billUser(details) {\n        return API.post(\"notes\", \"/billing\", {\n            body: details\n        });\n    }\n\n    async function handleFormSubmit(storage, { token, error }) {\n        if (error) {\n            onError(error);\n            return;\n        }\n\n        setIsLoading(true);\n\n        try {\n            await billUser({\n                storage,\n                source: token.id\n            });\n\n            alert(\"Your card has been charged successfully!\");\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"Settings\">\n            <StripeProvider stripe={stripe}>\n                <Elements\n                    fonts={[\n                        {\n                            cssSrc:\n                                \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800\",\n                        },\n                    ]}\n                >\n                    <BillingForm isLoading={isLoading} onSubmit={handleFormSubmit} />\n                </Elements>\n            </StripeProvider>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\n\nexport default function AuthenticatedRoute({ children, ...rest }) {\n  const { pathname, search } = useLocation();\n  const { isAuthenticated } = useAppContext();\n  return (\n    <Route {...rest}>\n      {isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={\n          `/login?redirect=${pathname}${search}`\n        } />\n      )}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\n\nfunction querystring(name, url = window.location.href) {\n    name = name.replace(/[[]]/g, \"\\\\$&\");\n\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n    const results = regex.exec(url);\n\n    if (!results) {\n        return null;\n    }\n    if (!results[2]) {\n        return \"\";\n    }\n\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport default function UnauthenticatedRoute({ children, ...rest }) {\n    const { isAuthenticated } = useAppContext();\n    const redirect = querystring(\"redirect\");\n    return (\n        <Route {...rest}>\n            {!isAuthenticated ? (\n                children\n            ) : (\n                <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect} />\n            )}\n        </Route>\n    );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./containers/NotFound\";\nimport Login from \"./containers/Login\";\nimport Home from \"./containers/Home\";\nimport Signup from \"./containers/Signup\";\nimport NewNote from \"./containers/NewNote\";\nimport Notes from \"./containers/Notes\";\nimport Settings from \"./containers/Settings\";\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <UnauthenticatedRoute exact path=\"/login\">\n                <Login />\n            </UnauthenticatedRoute>\n            <UnauthenticatedRoute exact path=\"/signup\">\n                <Signup />\n            </UnauthenticatedRoute>\n            <AuthenticatedRoute exact path=\"/settings\">\n                <Settings />\n            </AuthenticatedRoute>\n            <AuthenticatedRoute exact path=\"/notes/new\">\n                <NewNote />\n            </AuthenticatedRoute>\n            <AuthenticatedRoute exact path=\"/notes/:id\">\n                <Notes />\n            </AuthenticatedRoute>\n            {/* Finally, catch all unmatched routes */}\n            <Route>\n                <NotFound />\n            </Route>\n        </Switch>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Auth } from \"aws-amplify\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { onError } from \"./libs/errorLib\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch (e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push(\"/login\");\n  }\n\n  return (\n    !isAuthenticating && (\n      <div className=\"App container py-3\">\n        <Navbar collapseOnSelect bg=\"light\" expand=\"md\" className=\"mb-3\">\n          <LinkContainer to=\"/\">\n            <Navbar.Brand className=\"font-weight-bold text-muted\">\n              Scratch\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav activeKey={window.location.pathname}>\n              {isAuthenticated ? (\n                <>\n                  <LinkContainer to=\"/settings\">\n                    <Nav.Link>Settings</Nav.Link>\n                  </LinkContainer>\n                  <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <Nav.Link>Signup</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <Nav.Link>Login</Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n          <Routes />\n        </AppContext.Provider>\n      </div>\n    )\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Amplify } from 'aws-amplify';\nimport config from './config';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"notes\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}